/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package br.Oprincipio.Boleto;

import br.Oprincipio.Bean.Banco_Bean;
import br.Oprincipio.Bean.Boleto_Bean;
import br.Oprincipio.Bean.Fornecedor_Bean;
import br.Oprincipio.DAO.Boleto_DAO;
import br.Oprincipio.Fornecedor.JD_NovoFornecedor;
import br.Oprincipio.DAO.Fornecedor_DAO;
import java.util.ArrayList;
import java.util.List;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author User
 */
public class JD_BuscaFornecedorBanco extends javax.swing.JDialog {

    DefaultTableModel tb;
    List<Fornecedor_Bean> fornecedores;
    int banco;
    String codigo;
    public String fornecedor_retorno;

    /**
     * Creates new form BuscaFornecedorBanco_JD
     * @param parent
     * @param modal
     * @param banco_
     * @param codigo_
     */
    public JD_BuscaFornecedorBanco(java.awt.Frame parent, boolean modal, int banco_, String codigo_) {
        super(parent, modal);
        initComponents();
        tb = (DefaultTableModel) jTable1.getModel();
        this.banco = banco_;
        this.codigo = codigo_;
        fornecedor_retorno = null;
        atualizarFornecedores();
        preencherTabela();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jTable1 = new javax.swing.JTable();
        jPanel2 = new javax.swing.JPanel();
        compara = new javax.swing.JTextField();
        buttonCad = new javax.swing.JPanel();
        jButton1 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Selecionar Fornecedor");

        jTable1.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "ID", "Fornecedor", "Banco", "Numero", "Chave", "ID Boleto"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.String.class, java.lang.Integer.class, java.lang.Integer.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jTable1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jTable1MouseClicked(evt);
            }
        });
        jTable1.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                jTable1KeyPressed(evt);
            }
        });
        jScrollPane1.setViewportView(jTable1);
        if (jTable1.getColumnModel().getColumnCount() > 0) {
            jTable1.getColumnModel().getColumn(0).setMinWidth(20);
            jTable1.getColumnModel().getColumn(0).setMaxWidth(50);
            jTable1.getColumnModel().getColumn(2).setMinWidth(20);
            jTable1.getColumnModel().getColumn(2).setMaxWidth(50);
            jTable1.getColumnModel().getColumn(4).setMinWidth(1);
            jTable1.getColumnModel().getColumn(4).setPreferredWidth(1);
            jTable1.getColumnModel().getColumn(4).setMaxWidth(30);
            jTable1.getColumnModel().getColumn(5).setMinWidth(1);
            jTable1.getColumnModel().getColumn(5).setPreferredWidth(1);
            jTable1.getColumnModel().getColumn(5).setMaxWidth(30);
        }

        jPanel2.setBackground(new java.awt.Color(255, 153, 0));

        compara.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyPressed(java.awt.event.KeyEvent evt) {
                comparaKeyPressed(evt);
            }
        });

        buttonCad.setBackground(new java.awt.Color(255, 153, 0));
        buttonCad.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                buttonCadMouseClicked(evt);
            }
            public void mouseEntered(java.awt.event.MouseEvent evt) {
                buttonCadMouseEntered(evt);
            }
            public void mouseExited(java.awt.event.MouseEvent evt) {
                buttonCadMouseExited(evt);
            }
        });

        jButton1.setFont(new java.awt.Font("Tahoma", 1, 12)); // NOI18N
        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/IMG/NV/ic_control_point_24px.png"))); // NOI18N
        jButton1.setText("Cadastrar");
        jButton1.setBorder(null);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout buttonCadLayout = new javax.swing.GroupLayout(buttonCad);
        buttonCad.setLayout(buttonCadLayout);
        buttonCadLayout.setHorizontalGroup(
            buttonCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonCadLayout.createSequentialGroup()
                .addGap(0, 32, Short.MAX_VALUE)
                .addComponent(jButton1))
        );
        buttonCadLayout.setVerticalGroup(
            buttonCadLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, buttonCadLayout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jButton1))
        );

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(compara)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(buttonCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addComponent(buttonCad, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(compara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 536, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(0, 0, 0)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void comparaKeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_comparaKeyPressed
        filtrar();
    }//GEN-LAST:event_comparaKeyPressed

    private void buttonCadMouseEntered(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonCadMouseEntered
        buttonCad.setBackground(new java.awt.Color(255, 140, 50));
    }//GEN-LAST:event_buttonCadMouseEntered

    private void buttonCadMouseExited(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonCadMouseExited
        buttonCad.setBackground(new java.awt.Color(255, 153, 0));
    }//GEN-LAST:event_buttonCadMouseExited

    private void buttonCadMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_buttonCadMouseClicked
        cadastrar();
    }//GEN-LAST:event_buttonCadMouseClicked

    private void jTable1KeyPressed(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_jTable1KeyPressed
        if (jTable1.getSelectedRow() >= 0) {
            retornar();
        }
    }//GEN-LAST:event_jTable1KeyPressed

    private void jTable1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jTable1MouseClicked
        if (evt.getClickCount() == 2 && jTable1.getSelectedRow() >= 0) {
            retornar();
        }
    }//GEN-LAST:event_jTable1MouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        cadastrar();
    }//GEN-LAST:event_jButton1ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JD_BuscaFornecedorBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JD_BuscaFornecedorBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JD_BuscaFornecedorBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JD_BuscaFornecedorBanco.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>
        //</editor-fold>

        /* Create and display the dialog */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                JD_BuscaFornecedorBanco dialog = new JD_BuscaFornecedorBanco(new javax.swing.JFrame(), true, 0, null);
                dialog.addWindowListener(new java.awt.event.WindowAdapter() {
                    @Override
                    public void windowClosing(java.awt.event.WindowEvent e) {
                        System.exit(0);
                    }
                });
                dialog.setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel buttonCad;
    private javax.swing.JTextField compara;
    private javax.swing.JButton jButton1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable jTable1;
    // End of variables declaration//GEN-END:variables

    private void preencherTabela() {
        tb.setRowCount(0);
        for (Fornecedor_Bean f : fornecedores) {
            //System.out.println(f.toString());
            for (Banco_Bean c : f.getBanco()) {
                if (c.getBanco() == banco) {
                    Object[] dado = {f.getId(), f.getNome(), c.getBanco(), c.getNumero(), f.getChave(), c.getId()};
                    tb.addRow(dado);
                }
            }
        }
        for (Fornecedor_Bean f : fornecedores) {
            if (f.getBanco().get(0).getNumero() == null) {
                Object[] dado = {f.getId(), f.getNome(), "N/A", "N/A", f.getChave(), f.getBanco().get(0).getId()};
                tb.addRow(dado);
            }
        }
    }

    private void filtrar() {
        preencherTabela();
        for (int x = 0; x < tb.getRowCount(); x++) {
            String temp = (String) tb.getValueAt(x, 1);
            if (!temp.toUpperCase().contains(compara.getText().toUpperCase())) {
                tb.removeRow(x);
            }
        }
    }

    private void cadastrar() {
        JD_NovoFornecedor jd = new JD_NovoFornecedor(null, true);
        jd.setVisible(true);
        atualizarFornecedores();
        preencherTabela();
        if (jd.fornecedor_retorno != null){
            atualizarFornecedores();
            Fornecedor_Bean f = jd.fornecedor_retorno;
            for (Fornecedor_Bean t:fornecedores){
                if (f.getId() == t.getId() && f.getNome().equals(t.getNome())){
                    f = t;
                }
            }
            Object[] dado = {f.getId(), jd.fornecedor_retorno.getNome(), "N/A", "N/A", f.getChave(), f.getBanco().get(0).getId()};
            tb.addRow(dado);
        }
    }

    private void atualizarFornecedores() {
        fornecedores = new Fornecedor_DAO().findAll();
    }

    private void retornar() {
        fornecedor_retorno = (String) jTable1.getValueAt(jTable1.getSelectedRow(), 1);
        if (jTable1.getValueAt(jTable1.getSelectedRow(), 2) == "N/A") {
            Fornecedor_Bean f = new Fornecedor_Bean();
            f.setId((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0));
            f.setChave((int) jTable1.getValueAt(jTable1.getSelectedRow(), 4));
            Banco_Bean b = new Banco_Bean();
            b.setBanco(banco);
            b.setNumero(codigo.substring(25, 29));
            b.setId((int) jTable1.getValueAt(jTable1.getSelectedRow(), 5));
            if (!new Fornecedor_DAO().atualizarFornecedor_BancoENumero(f, b)) {
                JOptionPane.showMessageDialog(null, "Erro ao tentar atualizar Banco e Numero no banco de dados.", "Erro", JOptionPane.ERROR_MESSAGE);
                return;
            }
        } else {
            refinar();
        }
        this.dispose();
    }

    private void refinar() {
        List<Boleto_Bean> todos_boletos = new Boleto_DAO().findAllByFornecedor((int) jTable1.getValueAt(jTable1.getSelectedRow(), 4));
        List<Boleto_Bean> boletos_banco = new ArrayList<>();
        for (Boleto_Bean b : todos_boletos) {
            if (b.getBanco() == banco) {
                boletos_banco.add(b);
            }
        }
        Boleto_Bean bb = new Boleto_Bean();
        try {
            bb.setAll(codigo);
            boletos_banco.add(bb);
        } catch (Exception ex) {
            Logger.getLogger(JD_BuscaFornecedorBanco.class.getName()).log(Level.SEVERE, null, ex);
        }
        String conteudo = "";
        String maior = "";
        boolean achou = false;
        for (int x = 4; x < 44; x++) {
            boolean igual = true;
            char test = boletos_banco.get(0).getCd_barras().charAt(x);
            for (Boleto_Bean b : boletos_banco) {
                if (b.getCd_barras().charAt(x) != test) {
                    igual = false;
                }
            }
            if (igual) {
                conteudo += test;
                if (conteudo.length() > maior.length()) {
                    maior = conteudo;
                }
            } else {
                conteudo = "";
            }
        }
        Fornecedor_Bean f = new Fornecedor_Bean();
        f.setId((int) jTable1.getValueAt(jTable1.getSelectedRow(), 0));
        f.setChave((int) jTable1.getValueAt(jTable1.getSelectedRow(), 4));
        Banco_Bean b = new Banco_Bean();
        b.setBanco(banco);
        b.setNumero(maior);
        b.setId((int) jTable1.getValueAt(jTable1.getSelectedRow(), 5));
        if (!new Fornecedor_DAO().atualizarFornecedor_BancoENumero(f, b)) {
            JOptionPane.showMessageDialog(null, "Erro ao tentar atualizar Banco e Numero no banco de dados.", "Erro", JOptionPane.ERROR_MESSAGE);
            return;
        }
    }
}
